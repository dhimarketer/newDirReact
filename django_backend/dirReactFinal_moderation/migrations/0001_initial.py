# Generated by Django 5.0.2 on 2025-08-22 06:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dirReactFinal_directory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PendingChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('add', 'Add New Entry'), ('edit', 'Edit Existing Entry'), ('delete', 'Delete Entry'), ('photo_upload', 'Photo Upload'), ('family_update', 'Family Relationship Update')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('under_review', 'Under Review')], default='pending', max_length=20)),
                ('new_data', models.JSONField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dirReactFinal_directory.phonebookentry')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pending_changes', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pending Change',
                'verbose_name_plural': 'Pending Changes',
                'db_table': 'pending_changes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoModeration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_file', models.ImageField(upload_to='pending_photos/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_moderations', to='dirReactFinal_directory.phonebookentry')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo_reviews', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Photo Moderation',
                'verbose_name_plural': 'Photo Moderations',
                'db_table': 'photo_moderations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpamReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('inappropriate_content', 'Inappropriate Content'), ('spam', 'Spam'), ('fake_information', 'Fake Information'), ('harassment', 'Harassment'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='open', max_length=20)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spam_reports_filed', to=settings.AUTH_USER_MODEL)),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spam_reports_received', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spam_reports_resolved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Spam Report',
                'verbose_name_plural': 'Spam Reports',
                'db_table': 'spam_reports',
                'ordering': ['-created_at'],
            },
        ),
    ]
