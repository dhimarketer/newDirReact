# Generated by Django 5.0.2 on 2025-08-22 06:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneBookEntry',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('nid', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.TextField()),
                ('contact', models.CharField(max_length=20)),
                ('address', models.TextField(blank=True, null=True)),
                ('atoll', models.TextField(blank=True, null=True)),
                ('island', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('ward', models.TextField(blank=True, null=True)),
                ('party', models.TextField(blank=True, null=True)),
                ('DOB', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('extra', models.TextField(blank=True, null=True)),
                ('profession', models.TextField(blank=True, null=True)),
                ('pep_status', models.TextField(blank=True, null=True)),
                ('change_status', models.CharField(default='pending', max_length=20)),
                ('requested_by', models.TextField(blank=True, null=True)),
                ('batch', models.CharField(blank=True, max_length=20, null=True)),
                ('image_status', models.CharField(blank=True, max_length=20, null=True)),
                ('family_group_id', models.IntegerField(blank=True, null=True)),
                # 2025-01-27: Removed created_at and updated_at fields as they don't exist in actual t1 table
            ],
            options={
                'verbose_name': 'Phone Book Entry',
                'verbose_name_plural': 'Phone Book Entries',
                'db_table': 't1',
                'indexes': [models.Index(fields=['contact'], name='t1_contact_c25f46_idx'), models.Index(fields=['name'], name='t1_name_bcb039_idx'), models.Index(fields=['nid'], name='t1_nid_7d456a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, unique=True)),
                ('image_file', models.ImageField(upload_to='contact_photos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('entry', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='dirReactFinal_directory.phonebookentry')),
            ],
            options={
                'verbose_name': 'Contact Image',
                'verbose_name_plural': 'Contact Images',
                'db_table': 'images',
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_term', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'search_history',
                'ordering': ['-timestamp'],
            },
        ),
    ]
