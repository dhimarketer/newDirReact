# Generated by Django 5.0.2 on 2025-08-22 06:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dirReactFinal_directory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoreRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('rule_type', models.CharField(choices=[('action', 'Action-based'), ('referral', 'Referral-based'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], max_length=20)),
                ('points', models.IntegerField()),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('conditions', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Score Rule',
                'verbose_name_plural': 'Score Rules',
                'db_table': 'score_rules',
            },
        ),
        migrations.CreateModel(
            name='ScoreTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('earn', 'Earned'), ('spend', 'Spent'), ('bonus', 'Bonus'), ('penalty', 'Penalty'), ('referral', 'Referral Bonus'), ('admin_adjustment', 'Admin Adjustment')], max_length=20)),
                ('points', models.IntegerField()),
                ('description', models.TextField()),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='processed_score_transactions', to=settings.AUTH_USER_MODEL)),
                ('related_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dirReactFinal_directory.phonebookentry')),
                ('related_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_score_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Score Transaction',
                'verbose_name_plural': 'Score Transactions',
                'db_table': 'score_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserScoreHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_before', models.IntegerField()),
                ('score_after', models.IntegerField()),
                ('change_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_history_entries', to='dirReactFinal_scoring.scoretransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Score History',
                'verbose_name_plural': 'User Score Histories',
                'db_table': 'user_score_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_amount', models.IntegerField()),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_bonuses_received', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_bonuses_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Referral Bonus',
                'verbose_name_plural': 'Referral Bonuses',
                'db_table': 'referral_bonuses',
                'unique_together': {('referrer', 'referred_user')},
            },
        ),
    ]
